version: '3.9'

services:
  scraper:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: job_scraper
    volumes:
      - ./job_data:/app/job_data
      - ./config:/app/config
    environment:
      - SCRAPER_ENV=production
      - TZ=Asia/Tehran
      - POSTGRES_HOST=${POSTGRES_HOST:-db}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB:-jobsdb}
      - POSTGRES_USER=${POSTGRES_USER:-jobuser}
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_password
      - ENABLE_CRON=true
      - RUN_ON_START=true
      - LOG_LEVEL=INFO
    secrets:
      - db_password
    depends_on:
      db:
        condition: service_healthy

    # Expose health check and Prometheus metrics ports
    ports:
      - "8081:8081"
      - "8080:8080"
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1'
        reservations:
          memory: 1G
          cpus: '0.5'
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - scraper-network

  db:
    image: postgres:15-alpine
    container_name: job_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-jobsdb}
      - POSTGRES_USER=${POSTGRES_USER:-jobuser}
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_password
      - POSTGRES_INITDB_ARGS="--data-checksums"
    secrets:
      - db_password
    ports:
      - "5432:5432"
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jobuser -d jobsdb"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - scraper-network
    shm_size: 256m

  pgadmin:
    image: dpage/pgadmin4
    container_name: job_pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD_FILE=/run/secrets/pgadmin_password
      - PGADMIN_CONFIG_SERVER_MODE=False
    secrets:
      - pgadmin_password
    ports:
      - "5050:80"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - scraper-network
    healthcheck:
      test: ["CMD", "wget", "-O", "-", "http://localhost/misc/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  superset:
    image: apache/superset:latest
    container_name: superset_app
    environment:
      - ADMIN_PASSWORD=admin
      - SUPERSET_SECRET_KEY=change_me
      - APP_DB_HOST=${POSTGRES_HOST:-db}
      - APP_DB_PORT=${POSTGRES_PORT:-5432}
      - APP_DB_NAME=${POSTGRES_DB:-jobsdb}
      - APP_DB_USER=${POSTGRES_USER:-jobuser}
      - APP_DB_PASSWORD_FILE=/run/secrets/db_password
      - PIP_ADDITIONAL_REQUIREMENTS=psycopg2-binary
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - superset_home:/app/superset_home
      - ./superset-init.sh:/app/superset-init.sh
      - ./scripts:/app/scripts:ro
    ports:
      - "8088:8088"
    command: ["/bin/bash", "/app/superset-init.sh"]
    networks:
      - scraper-network
    secrets:
      - db_password

volumes:
  postgres_data:
    name: job_postgres_data
  pgadmin_data:
    name: job_pgadmin_data
  superset_home:
    name: job_superset_home

networks:
  scraper-network:
    driver: bridge

secrets:
  db_password:
    file: ./secrets/db_password.txt
  pgadmin_password:
    file: ./secrets/pgadmin_password.txt
